@model MekDB.ViewModels.EditUserViewModel
@{
    ViewBag.Title = "Rediger Bruger ";
}
<h2> @ViewBag.Title </h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new
       {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",@readonly = "readpnly"
               }
           })
                @Html.ValidationMessageFor(model => model.Email, "", new
           {
               @class = "textdanger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fornavn, htmlAttributes: new
       {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fornavn, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.Fornavn, "", new
           {
               @class = "textdanger"
           })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Efternavn, htmlAttributes: new
       {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Efternavn, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.Efternavn, "", new
           {
               @class = "textdanger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hold, htmlAttributes: new
       {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hold, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.Hold, "", new
           {
               @class = "textdanger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KontaktListen, htmlAttributes: new
       {
           @class = "control-label col-md-2"
       })
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.KontaktListen, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.KontaktListen, "", new
           {
               @class = "textdanger"
           })
            </div>*@

            @Html.RadioButtonFor(m => m.KontaktListen, "Ja") Ja
            @Html.RadioButtonFor(m => m.KontaktListen, "Nej") Nej   
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.TelefonNr, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address.TelefonNr, new { @class = "form-control", @type = "tel", @min = "0", @autocomplete = "off" })

                @Html.ValidationMessageFor(model => model.Address.TelefonNr, "", new { @class = "textdanger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Roles", new { @class = "control-label col-md-2" })
            <span class="col-md-10">
                @foreach (var item in Model.RolesList)
                {
                    <input type="radio" name="SelectedRole" value="@item.Value"
                           checked="@item.Selected" class="checkbox-inline" />
                        @Html.Label(item.Value, new { @class = "control-label" })
                }
            </span>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Gem" class="btn btn-success btn-md" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Tilbage", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}